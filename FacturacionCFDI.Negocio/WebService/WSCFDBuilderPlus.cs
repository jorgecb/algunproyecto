//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código fuente fue generado automáticamente por wsdl, Versión=4.8.3928.0.
// 
using System;
using System.Web.Services;
using System.Diagnostics;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
using System.ComponentModel;

namespace FacturacionCFDI.Negocio.WebService {    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSCFDBuilderPlusSoap", Namespace="http://edixcfdisecure.ekomercio.com/")]
    public partial class WSCFDBuilderPlus : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback timbrarFacturaElectronicaOperationCompleted;
        
        private System.Threading.SendOrPostCallback timbrarFacturaElectronica_soloTimbreOperationCompleted;
        
        private System.Threading.SendOrPostCallback timbrarFacturaElectronica_sectorPrimarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractCFDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractCFDI_SoloTimbreOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConsultaPadronSectorPrimarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConsultaPadronSectorPrimarioPluginOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAllNameSpacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateXMLFromXSDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCFDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCFDI_SignOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTimbreCFDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelarCFDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAcuseSATOperationCompleted;
        
        private System.Threading.SendOrPostCallback solicitarConfirmacionTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidarFuncionamientoOperationCompleted;
        
        /// <remarks/>
        public WSCFDBuilderPlus() {
            this.Url = "https://edixcfdisecure.ekomercio.com/WSCFDBuilderPlusTurbo/WSCFDBuilderPlus.asmx";
        }
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event timbrarFacturaElectronicaCompletedEventHandler timbrarFacturaElectronicaCompleted;
        
        /// <remarks/>
        public event timbrarFacturaElectronica_soloTimbreCompletedEventHandler timbrarFacturaElectronica_soloTimbreCompleted;
        
        /// <remarks/>
        public event timbrarFacturaElectronica_sectorPrimarioCompletedEventHandler timbrarFacturaElectronica_sectorPrimarioCompleted;
        
        /// <remarks/>
        public event extractCFDICompletedEventHandler extractCFDICompleted;
        
        /// <remarks/>
        public event extractCFDI_SoloTimbreCompletedEventHandler extractCFDI_SoloTimbreCompleted;
        
        /// <remarks/>
        public event TestConsultaPadronSectorPrimarioCompletedEventHandler TestConsultaPadronSectorPrimarioCompleted;
        
        /// <remarks/>
        public event TestConsultaPadronSectorPrimarioPluginCompletedEventHandler TestConsultaPadronSectorPrimarioPluginCompleted;
        
        /// <remarks/>
        public event removeAllNameSpacesCompletedEventHandler removeAllNameSpacesCompleted;
        
        /// <remarks/>
        public event validateXMLFromXSDCompletedEventHandler validateXMLFromXSDCompleted;
        
        /// <remarks/>
        public event getCFDICompletedEventHandler getCFDICompleted;
        
        /// <remarks/>
        public event getCFDI_SignCompletedEventHandler getCFDI_SignCompleted;
        
        /// <remarks/>
        public event getTimbreCFDICompletedEventHandler getTimbreCFDICompleted;
        
        /// <remarks/>
        public event cancelarCFDICompletedEventHandler cancelarCFDICompleted;
        
        /// <remarks/>
        public event getAcuseSATCompletedEventHandler getAcuseSATCompleted;
        
        /// <remarks/>
        public event solicitarConfirmacionTokenCompletedEventHandler solicitarConfirmacionTokenCompleted;
        
        /// <remarks/>
        public event ValidarFuncionamientoCompletedEventHandler ValidarFuncionamientoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/GetVersion", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/timbrarFacturaElectronica", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string timbrarFacturaElectronica(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword) {
            object[] results = this.Invoke("timbrarFacturaElectronica", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintimbrarFacturaElectronica(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("timbrarFacturaElectronica", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndtimbrarFacturaElectronica(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void timbrarFacturaElectronicaAsync(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword) {
            this.timbrarFacturaElectronicaAsync(cXMLFirmado, cCadenaOriginal, cUsuario, cPassword, null);
        }
        
        /// <remarks/>
        public void timbrarFacturaElectronicaAsync(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword, object userState) {
            if ((this.timbrarFacturaElectronicaOperationCompleted == null)) {
                this.timbrarFacturaElectronicaOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimbrarFacturaElectronicaOperationCompleted);
            }
            this.InvokeAsync("timbrarFacturaElectronica", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword}, this.timbrarFacturaElectronicaOperationCompleted, userState);
        }
        
        private void OntimbrarFacturaElectronicaOperationCompleted(object arg) {
            if ((this.timbrarFacturaElectronicaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timbrarFacturaElectronicaCompleted(this, new timbrarFacturaElectronicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/timbrarFacturaElectronica_soloTimbre", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string timbrarFacturaElectronica_soloTimbre(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword) {
            object[] results = this.Invoke("timbrarFacturaElectronica_soloTimbre", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintimbrarFacturaElectronica_soloTimbre(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("timbrarFacturaElectronica_soloTimbre", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndtimbrarFacturaElectronica_soloTimbre(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void timbrarFacturaElectronica_soloTimbreAsync(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword) {
            this.timbrarFacturaElectronica_soloTimbreAsync(cXMLFirmado, cCadenaOriginal, cUsuario, cPassword, null);
        }
        
        /// <remarks/>
        public void timbrarFacturaElectronica_soloTimbreAsync(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword, object userState) {
            if ((this.timbrarFacturaElectronica_soloTimbreOperationCompleted == null)) {
                this.timbrarFacturaElectronica_soloTimbreOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimbrarFacturaElectronica_soloTimbreOperationCompleted);
            }
            this.InvokeAsync("timbrarFacturaElectronica_soloTimbre", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword}, this.timbrarFacturaElectronica_soloTimbreOperationCompleted, userState);
        }
        
        private void OntimbrarFacturaElectronica_soloTimbreOperationCompleted(object arg) {
            if ((this.timbrarFacturaElectronica_soloTimbreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timbrarFacturaElectronica_soloTimbreCompleted(this, new timbrarFacturaElectronica_soloTimbreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/timbrarFacturaElectronica_sectorPrimario", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string timbrarFacturaElectronica_sectorPrimario(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword, string cCertificadoBase64Receptor, string cLlavePrivadaReceptorPEM) {
            object[] results = this.Invoke("timbrarFacturaElectronica_sectorPrimario", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword,
                        cCertificadoBase64Receptor,
                        cLlavePrivadaReceptorPEM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintimbrarFacturaElectronica_sectorPrimario(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword, string cCertificadoBase64Receptor, string cLlavePrivadaReceptorPEM, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("timbrarFacturaElectronica_sectorPrimario", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword,
                        cCertificadoBase64Receptor,
                        cLlavePrivadaReceptorPEM}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndtimbrarFacturaElectronica_sectorPrimario(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void timbrarFacturaElectronica_sectorPrimarioAsync(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword, string cCertificadoBase64Receptor, string cLlavePrivadaReceptorPEM) {
            this.timbrarFacturaElectronica_sectorPrimarioAsync(cXMLFirmado, cCadenaOriginal, cUsuario, cPassword, cCertificadoBase64Receptor, cLlavePrivadaReceptorPEM, null);
        }
        
        /// <remarks/>
        public void timbrarFacturaElectronica_sectorPrimarioAsync(string cXMLFirmado, string cCadenaOriginal, string cUsuario, string cPassword, string cCertificadoBase64Receptor, string cLlavePrivadaReceptorPEM, object userState) {
            if ((this.timbrarFacturaElectronica_sectorPrimarioOperationCompleted == null)) {
                this.timbrarFacturaElectronica_sectorPrimarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimbrarFacturaElectronica_sectorPrimarioOperationCompleted);
            }
            this.InvokeAsync("timbrarFacturaElectronica_sectorPrimario", new object[] {
                        cXMLFirmado,
                        cCadenaOriginal,
                        cUsuario,
                        cPassword,
                        cCertificadoBase64Receptor,
                        cLlavePrivadaReceptorPEM}, this.timbrarFacturaElectronica_sectorPrimarioOperationCompleted, userState);
        }
        
        private void OntimbrarFacturaElectronica_sectorPrimarioOperationCompleted(object arg) {
            if ((this.timbrarFacturaElectronica_sectorPrimarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timbrarFacturaElectronica_sectorPrimarioCompleted(this, new timbrarFacturaElectronica_sectorPrimarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/extractCFDI", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string extractCFDI(string cHashCFD, string cUsuario, string cPassword) {
            object[] results = this.Invoke("extractCFDI", new object[] {
                        cHashCFD,
                        cUsuario,
                        cPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginextractCFDI(string cHashCFD, string cUsuario, string cPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("extractCFDI", new object[] {
                        cHashCFD,
                        cUsuario,
                        cPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndextractCFDI(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void extractCFDIAsync(string cHashCFD, string cUsuario, string cPassword) {
            this.extractCFDIAsync(cHashCFD, cUsuario, cPassword, null);
        }
        
        /// <remarks/>
        public void extractCFDIAsync(string cHashCFD, string cUsuario, string cPassword, object userState) {
            if ((this.extractCFDIOperationCompleted == null)) {
                this.extractCFDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractCFDIOperationCompleted);
            }
            this.InvokeAsync("extractCFDI", new object[] {
                        cHashCFD,
                        cUsuario,
                        cPassword}, this.extractCFDIOperationCompleted, userState);
        }
        
        private void OnextractCFDIOperationCompleted(object arg) {
            if ((this.extractCFDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractCFDICompleted(this, new extractCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/extractCFDI_SoloTimbre", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string extractCFDI_SoloTimbre(string cHashCFD, string cUsuario, string cPassword) {
            object[] results = this.Invoke("extractCFDI_SoloTimbre", new object[] {
                        cHashCFD,
                        cUsuario,
                        cPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginextractCFDI_SoloTimbre(string cHashCFD, string cUsuario, string cPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("extractCFDI_SoloTimbre", new object[] {
                        cHashCFD,
                        cUsuario,
                        cPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndextractCFDI_SoloTimbre(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void extractCFDI_SoloTimbreAsync(string cHashCFD, string cUsuario, string cPassword) {
            this.extractCFDI_SoloTimbreAsync(cHashCFD, cUsuario, cPassword, null);
        }
        
        /// <remarks/>
        public void extractCFDI_SoloTimbreAsync(string cHashCFD, string cUsuario, string cPassword, object userState) {
            if ((this.extractCFDI_SoloTimbreOperationCompleted == null)) {
                this.extractCFDI_SoloTimbreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractCFDI_SoloTimbreOperationCompleted);
            }
            this.InvokeAsync("extractCFDI_SoloTimbre", new object[] {
                        cHashCFD,
                        cUsuario,
                        cPassword}, this.extractCFDI_SoloTimbreOperationCompleted, userState);
        }
        
        private void OnextractCFDI_SoloTimbreOperationCompleted(object arg) {
            if ((this.extractCFDI_SoloTimbreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractCFDI_SoloTimbreCompleted(this, new extractCFDI_SoloTimbreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/TestConsultaPadronSectorPrimario", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestConsultaPadronSectorPrimario() {
            object[] results = this.Invoke("TestConsultaPadronSectorPrimario", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestConsultaPadronSectorPrimario(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestConsultaPadronSectorPrimario", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndTestConsultaPadronSectorPrimario(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestConsultaPadronSectorPrimarioAsync() {
            this.TestConsultaPadronSectorPrimarioAsync(null);
        }
        
        /// <remarks/>
        public void TestConsultaPadronSectorPrimarioAsync(object userState) {
            if ((this.TestConsultaPadronSectorPrimarioOperationCompleted == null)) {
                this.TestConsultaPadronSectorPrimarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConsultaPadronSectorPrimarioOperationCompleted);
            }
            this.InvokeAsync("TestConsultaPadronSectorPrimario", new object[0], this.TestConsultaPadronSectorPrimarioOperationCompleted, userState);
        }
        
        private void OnTestConsultaPadronSectorPrimarioOperationCompleted(object arg) {
            if ((this.TestConsultaPadronSectorPrimarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConsultaPadronSectorPrimarioCompleted(this, new TestConsultaPadronSectorPrimarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/TestConsultaPadronSectorPrimarioPlugin", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestConsultaPadronSectorPrimarioPlugin() {
            object[] results = this.Invoke("TestConsultaPadronSectorPrimarioPlugin", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestConsultaPadronSectorPrimarioPlugin(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestConsultaPadronSectorPrimarioPlugin", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndTestConsultaPadronSectorPrimarioPlugin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestConsultaPadronSectorPrimarioPluginAsync() {
            this.TestConsultaPadronSectorPrimarioPluginAsync(null);
        }
        
        /// <remarks/>
        public void TestConsultaPadronSectorPrimarioPluginAsync(object userState) {
            if ((this.TestConsultaPadronSectorPrimarioPluginOperationCompleted == null)) {
                this.TestConsultaPadronSectorPrimarioPluginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConsultaPadronSectorPrimarioPluginOperationCompleted);
            }
            this.InvokeAsync("TestConsultaPadronSectorPrimarioPlugin", new object[0], this.TestConsultaPadronSectorPrimarioPluginOperationCompleted, userState);
        }
        
        private void OnTestConsultaPadronSectorPrimarioPluginOperationCompleted(object arg) {
            if ((this.TestConsultaPadronSectorPrimarioPluginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConsultaPadronSectorPrimarioPluginCompleted(this, new TestConsultaPadronSectorPrimarioPluginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/removeAllNameSpaces", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string removeAllNameSpaces(string xml) {
            object[] results = this.Invoke("removeAllNameSpaces", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveAllNameSpaces(string xml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeAllNameSpaces", new object[] {
                        xml}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndremoveAllNameSpaces(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeAllNameSpacesAsync(string xml) {
            this.removeAllNameSpacesAsync(xml, null);
        }
        
        /// <remarks/>
        public void removeAllNameSpacesAsync(string xml, object userState) {
            if ((this.removeAllNameSpacesOperationCompleted == null)) {
                this.removeAllNameSpacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAllNameSpacesOperationCompleted);
            }
            this.InvokeAsync("removeAllNameSpaces", new object[] {
                        xml}, this.removeAllNameSpacesOperationCompleted, userState);
        }
        
        private void OnremoveAllNameSpacesOperationCompleted(object arg) {
            if ((this.removeAllNameSpacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAllNameSpacesCompleted(this, new removeAllNameSpacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/validateXMLFromXSD", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string validateXMLFromXSD(string xml) {
            object[] results = this.Invoke("validateXMLFromXSD", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalidateXMLFromXSD(string xml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("validateXMLFromXSD", new object[] {
                        xml}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndvalidateXMLFromXSD(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void validateXMLFromXSDAsync(string xml) {
            this.validateXMLFromXSDAsync(xml, null);
        }
        
        /// <remarks/>
        public void validateXMLFromXSDAsync(string xml, object userState) {
            if ((this.validateXMLFromXSDOperationCompleted == null)) {
                this.validateXMLFromXSDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateXMLFromXSDOperationCompleted);
            }
            this.InvokeAsync("validateXMLFromXSD", new object[] {
                        xml}, this.validateXMLFromXSDOperationCompleted, userState);
        }
        
        private void OnvalidateXMLFromXSDOperationCompleted(object arg) {
            if ((this.validateXMLFromXSDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateXMLFromXSDCompleted(this, new validateXMLFromXSDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/getCFDI", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCFDI(string usuario, string password, string xmlFirmado) {
            object[] results = this.Invoke("getCFDI", new object[] {
                        usuario,
                        password,
                        xmlFirmado});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCFDI(string usuario, string password, string xmlFirmado, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCFDI", new object[] {
                        usuario,
                        password,
                        xmlFirmado}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetCFDI(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCFDIAsync(string usuario, string password, string xmlFirmado) {
            this.getCFDIAsync(usuario, password, xmlFirmado, null);
        }
        
        /// <remarks/>
        public void getCFDIAsync(string usuario, string password, string xmlFirmado, object userState) {
            if ((this.getCFDIOperationCompleted == null)) {
                this.getCFDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCFDIOperationCompleted);
            }
            this.InvokeAsync("getCFDI", new object[] {
                        usuario,
                        password,
                        xmlFirmado}, this.getCFDIOperationCompleted, userState);
        }
        
        private void OngetCFDIOperationCompleted(object arg) {
            if ((this.getCFDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCFDICompleted(this, new getCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/getCFDI_Sign", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCFDI_Sign(string usuario, string password, string xmlFirmado) {
            object[] results = this.Invoke("getCFDI_Sign", new object[] {
                        usuario,
                        password,
                        xmlFirmado});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCFDI_Sign(string usuario, string password, string xmlFirmado, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCFDI_Sign", new object[] {
                        usuario,
                        password,
                        xmlFirmado}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetCFDI_Sign(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCFDI_SignAsync(string usuario, string password, string xmlFirmado) {
            this.getCFDI_SignAsync(usuario, password, xmlFirmado, null);
        }
        
        /// <remarks/>
        public void getCFDI_SignAsync(string usuario, string password, string xmlFirmado, object userState) {
            if ((this.getCFDI_SignOperationCompleted == null)) {
                this.getCFDI_SignOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCFDI_SignOperationCompleted);
            }
            this.InvokeAsync("getCFDI_Sign", new object[] {
                        usuario,
                        password,
                        xmlFirmado}, this.getCFDI_SignOperationCompleted, userState);
        }
        
        private void OngetCFDI_SignOperationCompleted(object arg) {
            if ((this.getCFDI_SignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCFDI_SignCompleted(this, new getCFDI_SignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/getTimbreCFDI", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTimbreCFDI(string usuario, string password, string xmlFirmado) {
            object[] results = this.Invoke("getTimbreCFDI", new object[] {
                        usuario,
                        password,
                        xmlFirmado});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTimbreCFDI(string usuario, string password, string xmlFirmado, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTimbreCFDI", new object[] {
                        usuario,
                        password,
                        xmlFirmado}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetTimbreCFDI(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTimbreCFDIAsync(string usuario, string password, string xmlFirmado) {
            this.getTimbreCFDIAsync(usuario, password, xmlFirmado, null);
        }
        
        /// <remarks/>
        public void getTimbreCFDIAsync(string usuario, string password, string xmlFirmado, object userState) {
            if ((this.getTimbreCFDIOperationCompleted == null)) {
                this.getTimbreCFDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimbreCFDIOperationCompleted);
            }
            this.InvokeAsync("getTimbreCFDI", new object[] {
                        usuario,
                        password,
                        xmlFirmado}, this.getTimbreCFDIOperationCompleted, userState);
        }
        
        private void OngetTimbreCFDIOperationCompleted(object arg) {
            if ((this.getTimbreCFDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTimbreCFDICompleted(this, new getTimbreCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/cancelarCFDI", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string cancelarCFDI(string usuario, string password, string rfcEmisor, string uuid) {
            object[] results = this.Invoke("cancelarCFDI", new object[] {
                        usuario,
                        password,
                        rfcEmisor,
                        uuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincancelarCFDI(string usuario, string password, string rfcEmisor, string uuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("cancelarCFDI", new object[] {
                        usuario,
                        password,
                        rfcEmisor,
                        uuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndcancelarCFDI(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelarCFDIAsync(string usuario, string password, string rfcEmisor, string uuid) {
            this.cancelarCFDIAsync(usuario, password, rfcEmisor, uuid, null);
        }
        
        /// <remarks/>
        public void cancelarCFDIAsync(string usuario, string password, string rfcEmisor, string uuid, object userState) {
            if ((this.cancelarCFDIOperationCompleted == null)) {
                this.cancelarCFDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelarCFDIOperationCompleted);
            }
            this.InvokeAsync("cancelarCFDI", new object[] {
                        usuario,
                        password,
                        rfcEmisor,
                        uuid}, this.cancelarCFDIOperationCompleted, userState);
        }
        
        private void OncancelarCFDIOperationCompleted(object arg) {
            if ((this.cancelarCFDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelarCFDICompleted(this, new cancelarCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/getAcuseSAT", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AcuseSAT[] getAcuseSAT(string usuario, string password, System.Guid[] uuids) {
            object[] results = this.Invoke("getAcuseSAT", new object[] {
                        usuario,
                        password,
                        uuids});
            return ((AcuseSAT[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAcuseSAT(string usuario, string password, System.Guid[] uuids, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAcuseSAT", new object[] {
                        usuario,
                        password,
                        uuids}, callback, asyncState);
        }
        
        /// <remarks/>
        public AcuseSAT[] EndgetAcuseSAT(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AcuseSAT[])(results[0]));
        }
        
        /// <remarks/>
        public void getAcuseSATAsync(string usuario, string password, System.Guid[] uuids) {
            this.getAcuseSATAsync(usuario, password, uuids, null);
        }
        
        /// <remarks/>
        public void getAcuseSATAsync(string usuario, string password, System.Guid[] uuids, object userState) {
            if ((this.getAcuseSATOperationCompleted == null)) {
                this.getAcuseSATOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAcuseSATOperationCompleted);
            }
            this.InvokeAsync("getAcuseSAT", new object[] {
                        usuario,
                        password,
                        uuids}, this.getAcuseSATOperationCompleted, userState);
        }
        
        private void OngetAcuseSATOperationCompleted(object arg) {
            if ((this.getAcuseSATCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAcuseSATCompleted(this, new getAcuseSATCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/solicitarConfirmacionToken", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultadoToken solicitarConfirmacionToken(string cRFCEmisor, decimal nMonto, decimal nTipoCambio, string cUsuario, string cPassword) {
            object[] results = this.Invoke("solicitarConfirmacionToken", new object[] {
                        cRFCEmisor,
                        nMonto,
                        nTipoCambio,
                        cUsuario,
                        cPassword});
            return ((ResultadoToken)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsolicitarConfirmacionToken(string cRFCEmisor, decimal nMonto, decimal nTipoCambio, string cUsuario, string cPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("solicitarConfirmacionToken", new object[] {
                        cRFCEmisor,
                        nMonto,
                        nTipoCambio,
                        cUsuario,
                        cPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultadoToken EndsolicitarConfirmacionToken(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultadoToken)(results[0]));
        }
        
        /// <remarks/>
        public void solicitarConfirmacionTokenAsync(string cRFCEmisor, decimal nMonto, decimal nTipoCambio, string cUsuario, string cPassword) {
            this.solicitarConfirmacionTokenAsync(cRFCEmisor, nMonto, nTipoCambio, cUsuario, cPassword, null);
        }
        
        /// <remarks/>
        public void solicitarConfirmacionTokenAsync(string cRFCEmisor, decimal nMonto, decimal nTipoCambio, string cUsuario, string cPassword, object userState) {
            if ((this.solicitarConfirmacionTokenOperationCompleted == null)) {
                this.solicitarConfirmacionTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsolicitarConfirmacionTokenOperationCompleted);
            }
            this.InvokeAsync("solicitarConfirmacionToken", new object[] {
                        cRFCEmisor,
                        nMonto,
                        nTipoCambio,
                        cUsuario,
                        cPassword}, this.solicitarConfirmacionTokenOperationCompleted, userState);
        }
        
        private void OnsolicitarConfirmacionTokenOperationCompleted(object arg) {
            if ((this.solicitarConfirmacionTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.solicitarConfirmacionTokenCompleted(this, new solicitarConfirmacionTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://edixcfdisecure.ekomercio.com/ValidarFuncionamiento", RequestNamespace="http://edixcfdisecure.ekomercio.com/", ResponseNamespace="http://edixcfdisecure.ekomercio.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidarFuncionamiento(ref string cMensaje) {
            object[] results = this.Invoke("ValidarFuncionamiento", new object[] {
                        cMensaje});
            cMensaje = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidarFuncionamiento(string cMensaje, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidarFuncionamiento", new object[] {
                        cMensaje}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndValidarFuncionamiento(System.IAsyncResult asyncResult, out string cMensaje) {
            object[] results = this.EndInvoke(asyncResult);
            cMensaje = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidarFuncionamientoAsync(string cMensaje) {
            this.ValidarFuncionamientoAsync(cMensaje, null);
        }
        
        /// <remarks/>
        public void ValidarFuncionamientoAsync(string cMensaje, object userState) {
            if ((this.ValidarFuncionamientoOperationCompleted == null)) {
                this.ValidarFuncionamientoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidarFuncionamientoOperationCompleted);
            }
            this.InvokeAsync("ValidarFuncionamiento", new object[] {
                        cMensaje}, this.ValidarFuncionamientoOperationCompleted, userState);
        }
        
        private void OnValidarFuncionamientoOperationCompleted(object arg) {
            if ((this.ValidarFuncionamientoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidarFuncionamientoCompleted(this, new ValidarFuncionamientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://edixcfdisecure.ekomercio.com/")]
    public partial class AcuseSAT {
        
        private System.Guid uUIDField;
        
        private bool existeAcuseField;
        
        private string acuseField;
        
        /// <remarks/>
        public System.Guid UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
            }
        }
        
        /// <remarks/>
        public bool ExisteAcuse {
            get {
                return this.existeAcuseField;
            }
            set {
                this.existeAcuseField = value;
            }
        }
        
        /// <remarks/>
        public string Acuse {
            get {
                return this.acuseField;
            }
            set {
                this.acuseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://edixcfdisecure.ekomercio.com/")]
    public partial class ResultadoToken {
        
        private bool procesoCorrectoField;
        
        private string tokenField;
        
        private string erroresField;
        
        /// <remarks/>
        public bool ProcesoCorrecto {
            get {
                return this.procesoCorrectoField;
            }
            set {
                this.procesoCorrectoField = value;
            }
        }
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string Errores {
            get {
                return this.erroresField;
            }
            set {
                this.erroresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void timbrarFacturaElectronicaCompletedEventHandler(object sender, timbrarFacturaElectronicaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timbrarFacturaElectronicaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timbrarFacturaElectronicaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void timbrarFacturaElectronica_soloTimbreCompletedEventHandler(object sender, timbrarFacturaElectronica_soloTimbreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timbrarFacturaElectronica_soloTimbreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timbrarFacturaElectronica_soloTimbreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void timbrarFacturaElectronica_sectorPrimarioCompletedEventHandler(object sender, timbrarFacturaElectronica_sectorPrimarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timbrarFacturaElectronica_sectorPrimarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timbrarFacturaElectronica_sectorPrimarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void extractCFDICompletedEventHandler(object sender, extractCFDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractCFDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractCFDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void extractCFDI_SoloTimbreCompletedEventHandler(object sender, extractCFDI_SoloTimbreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractCFDI_SoloTimbreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractCFDI_SoloTimbreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void TestConsultaPadronSectorPrimarioCompletedEventHandler(object sender, TestConsultaPadronSectorPrimarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConsultaPadronSectorPrimarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConsultaPadronSectorPrimarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void TestConsultaPadronSectorPrimarioPluginCompletedEventHandler(object sender, TestConsultaPadronSectorPrimarioPluginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConsultaPadronSectorPrimarioPluginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConsultaPadronSectorPrimarioPluginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void removeAllNameSpacesCompletedEventHandler(object sender, removeAllNameSpacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeAllNameSpacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeAllNameSpacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void validateXMLFromXSDCompletedEventHandler(object sender, validateXMLFromXSDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateXMLFromXSDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateXMLFromXSDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void getCFDICompletedEventHandler(object sender, getCFDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCFDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCFDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void getCFDI_SignCompletedEventHandler(object sender, getCFDI_SignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCFDI_SignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCFDI_SignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void getTimbreCFDICompletedEventHandler(object sender, getTimbreCFDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTimbreCFDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTimbreCFDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void cancelarCFDICompletedEventHandler(object sender, cancelarCFDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelarCFDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelarCFDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void getAcuseSATCompletedEventHandler(object sender, getAcuseSATCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAcuseSATCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAcuseSATCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcuseSAT[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcuseSAT[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void solicitarConfirmacionTokenCompletedEventHandler(object sender, solicitarConfirmacionTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class solicitarConfirmacionTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal solicitarConfirmacionTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultadoToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultadoToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void ValidarFuncionamientoCompletedEventHandler(object sender, ValidarFuncionamientoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidarFuncionamientoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidarFuncionamientoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string cMensaje {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}
